{# ------------------------------------------------------------------------ #}
{# Â© Copyright IBM Corporation 2020, 2021                                   #}
{# ------------------------------------------------------------------------ #}

.. _{{ module }}_role:

{# ------------------------------------------------------------------------ #}
{# Generate the title based on the role name and doc description            #}
{# ------------------------------------------------------------------------ #}

{% set title = module + ' -- ' + short_description | rst_ify %}
{{ title }}
{{ '=' * title | length }}

{# Disble this syle formatting in leu of list style #}
{#    {%   for desc in description %}
    {{ desc | rst_ify }}

    {%   endfor %}
#}

{# ------------------------------------------------------------------------ #}
{# Generate top level links                                                 #}
{# ------------------------------------------------------------------------ #}

.. contents::
   :local:
   :depth: 1

{# ------------------------------------------------------------------------ #}
{# Generate the synopsis based on the doc description                       #}
{# ------------------------------------------------------------------------ #}

Synopsis
--------
{% if description -%}

{%   for desc in description %}
- {{ desc | rst_ify }}
{%   endfor %}

{% endif %}

{# ------------------------------------------------------------------------ #}
{# Generate the dependencies based on the doc description                   #}
{# ------------------------------------------------------------------------ #}

{% if dependencies -%}
Dependencies
------------

The below requirements are needed on the host that executes this role.

{%   for desc in dependencies %}
- {{ desc | rst_ify }}
{%   endfor %}

{% endif %}


{# ------------------------------------------------------------------------ #}
{# Parse options and format function                                        #}
{# ------------------------------------------------------------------------ #}

{% macro option_generation(opts, level) %}
{# Control the order of options: true: ordered by name; false: keep source order #}
{%   set sorted = false %}
{%   for name, spec in (opts | dictsort if sorted else opts.items()) if not name.startswith('_') %}
{%     set req = "required" if spec.required else "optional" %}

{# if its a boolean we need to convert to a string for html #}
{% if spec.type == 'bool' %}
     {% set default_str = (spec.default | string | lower ) %}
{% elif spec.type == 'int' %}
     {% set default_str = (spec.default | string ) %}
{% else %}
     {% set default = ", default: " + spec.default if spec.default else "" %}
{% endif %}

{{ "  " * level }}{{ name }}
{%     for para in spec.description %}
  {{ "  " * level }}{{ para | rst_ify }}

{%     endfor %}

  {{ "  " * level }}| **required**: {{ spec.required | default("False") }}
  {{ "  " * level }}| **type**: {{ spec.type | default("str") }}
{%     if spec.default %}
  {{ "  " * level }}| **default**: {{ spec.default }}
{%     endif %}
{%     if spec.choices %}
  {{ "  " * level }}| **choices**: {{ ", ".join(spec.choices) }}
{%     endif %}

{%     if spec.suboptions %}
{{ option_generation(spec.suboptions, level + 1) }}
{%     endif %}
{%   endfor %}
{% endmacro %}

{# ------------------------------------------------------------- #}
{# Generate the options doc                                      #}
{# ------------------------------------------------------------- #}

{% if options -%}
Parameters
----------

{{ option_generation(options, 0) }}
{% endif %}

{# ------------------------------------------------------------- #}
{# Generate the sample doc                                       #}
{# ------------------------------------------------------------- #}

Examples
--------

.. code-block:: yaml+jinja

{{ examples | indent(3, True) }}


{# ------------------------------------------------------------- #}
{# Generate the notes doc                                        #}
{# ------------------------------------------------------------- #}

{% if notes -%}
Notes
-----

.. note::
{%   for note in notes %}
   {{ note | rst_ify }}

{%   endfor %}
{% endif %}

{# ------------------------------------------------------------- #}
{# Generate the see also doc                                     #}
{# ------------------------------------------------------------- #}

{% if seealso -%}
See Also
--------

.. seealso::

{% for item in seealso %}
   - :ref:`{{ item.module }}_module`
{% endfor %}
{% endif %}

{# ------------------------------------------------------------- #}
{# Return doc macro                                              #}
{# ------------------------------------------------------------- #}

{% macro result_generation(results, level) %}

   {% for entry in results %}

      {%  set _description  = results[entry].description %}
      {%  set _returned     = results[entry].returned %}
      {%  set _type         = results[entry].type %}
      {%  set _contains     = results[entry].contains %}
      {%  set _sample       = results[entry].sample %}

      {{ entry | indent(level, True) }}
      {% if _description is iterable and _description is not string %}
{{ "  " * (level) }}| {{ _description[0] }}
      {% else %}
{{ "  " * (level) }}| {{ _description }}
      {% endif %}

      {% if _returned %}
{{ "  " * level }}| **returned**: {{ _returned }}
      {% endif %}
{{ "  " * level }}| **type**: {{ _type  }}

      {%- if _sample -%}
      {% if _type != 'str' and _type != 'int' %}
      
      {{ "  " * level }}| **sample**:

              .. code-block::

                       {{ _sample | tojson }}
      {% else %}

      {{ "  " * level }}| **sample**: {{ _sample }}

      {% endif %}
      {% endif %}

      {% if _contains %}
        {{ result_generation(_contains, level + 1) }}
      {% endif %}

      {% endfor  %}
  {% endmacro %}
{# ------------------------------------------------------------- #}
{# Generate the return values doc                                #}
{# ------------------------------------------------------------- #}

{% if returndocs -%}
Return Values
-------------

{{ result_generation(returndocs,1) }}
{% endif %}

