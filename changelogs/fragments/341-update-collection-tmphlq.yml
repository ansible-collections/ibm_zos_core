minor_changes:
- zos_encode - updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- zos_apf - updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- zos_blockinfile - updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- zos_lineinfile- updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- zos_mount - updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- zos_copy - updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- zos_mvs_raw - updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- zos_fetch - updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- module utils encode - updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- module utils backup - updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).
- module utils dd_statement- updates the module with a new option named tmp_hlq.
  This allows for a user to specify the data set high level qualifier (HLQ)
  used in any temporary data set created by the module. Often, the
  defaults are not permitted on systems, this provides a way to override
  the defaults. (https://github.com/ansible-collections/ibm_zos_core/pull/341).